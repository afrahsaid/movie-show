{"ast":null,"code":"var _jsxFileName = \"/Users/macbook/Documents/Programming/React/first-react-app/first-react-app/src/App.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react'; //4-This is used when state is going to be used \nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [counter, setCounter] = useState(0); //whenever you call something as a function and it starts with the word 'use' in react, we call it a hook. the name that we place inside the bracket is the name of the state, and the second one is the setter function.\n  useEffect(() => {\n    alert('U have changed counter to ' + counter);\n  }, [counter]);\n  //5-useEffect is used so you can call somecode whenever something happens in the react code \n  //1- Fragament: is \"<></>\" used when you want to put several html elements\n  //2-The Person is a component, and it is a piece of code that returns some jsx, \n  //you can dublicate it as much as you can to reuse the component without typing it again\n\n  //3-Probs: probs allows you to pass dynamic data through react components\n  //4- State: state in a react is a plane js object used by react to represent \n  //a piece of information about the components current situatuon, and it is completely managed by the component itself.\n\n  // const Person=(probs)=>{\n  //   return(\n  //     <>\n  //     <h1>Name: {probs.name}</h1>\n  //     <h1>Last Name: {probs.lastName}</h1>\n  //     <h1>Age: {probs.age}</h1>\n  //     </>\n  //   )\n  // }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setCounter(prevCounter => prevCounter - 1),\n      children: \"- \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 6\n    }, this), \"  \", /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: counter\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setCounter(prevCounter => prevCounter + 1),\n      children: \"+\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"uPkTgB8PBsujXy6a5mXWSxFNaD8=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","jsxDEV","_jsxDEV","App","_s","counter","setCounter","alert","className","children","onClick","prevCounter","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/macbook/Documents/Programming/React/first-react-app/first-react-app/src/App.js"],"sourcesContent":["import { useState, useEffect } from 'react'; //4-This is used when state is going to be used \nimport './App.css';\nconst App = ()=>{\n  const [counter, setCounter]=useState(0);//whenever you call something as a function and it starts with the word 'use' in react, we call it a hook. the name that we place inside the bracket is the name of the state, and the second one is the setter function.\n  useEffect(()=>{\n    alert('U have changed counter to '+counter)\n  },[counter]);\n  //5-useEffect is used so you can call somecode whenever something happens in the react code \n  //1- Fragament: is \"<></>\" used when you want to put several html elements\n  //2-The Person is a component, and it is a piece of code that returns some jsx, \n  //you can dublicate it as much as you can to reuse the component without typing it again\n\n  //3-Probs: probs allows you to pass dynamic data through react components\n  //4- State: state in a react is a plane js object used by react to represent \n  //a piece of information about the components current situatuon, and it is completely managed by the component itself.\n  \n  // const Person=(probs)=>{\n  //   return(\n  //     <>\n  //     <h1>Name: {probs.name}</h1>\n  //     <h1>Last Name: {probs.lastName}</h1>\n  //     <h1>Age: {probs.age}</h1>\n  //     </>\n  //   )\n  // }\n  return (\n    <div className=\"App\">\n     <button onClick={()=>setCounter((prevCounter)=>prevCounter-1)}>- </button>  {/* This is called a call back function */}\n      <h1>{counter}</h1>\n      <button onClick={()=>setCounter((prevCounter)=>prevCounter+1)}>+</button>\n      {/* <Person name={'AFrah'} lastName={'Said'} age={'25'}></Person>\n      <Person name='Soso' lastName='said' age={24+2} ></Person> */}\n\n    </div>\n  );\n}\nexport default App;\n"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO,CAAC,CAAC;AAC7C,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AACnB,MAAMC,GAAG,GAAGA,CAAA,KAAI;EAAAC,EAAA;EACd,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAACP,QAAQ,CAAC,CAAC,CAAC,CAAC;EACxCC,SAAS,CAAC,MAAI;IACZO,KAAK,CAAC,4BAA4B,GAACF,OAAO,CAAC;EAC7C,CAAC,EAAC,CAACA,OAAO,CAAC,CAAC;EACZ;EACA;EACA;EACA;;EAEA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA,oBACEH,OAAA;IAAKM,SAAS,EAAC,KAAK;IAAAC,QAAA,gBACnBP,OAAA;MAAQQ,OAAO,EAAEA,CAAA,KAAIJ,UAAU,CAAEK,WAAW,IAAGA,WAAW,GAAC,CAAC,CAAE;MAAAF,QAAA,EAAC;IAAE;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,MAAE,eAC3Eb,OAAA;MAAAO,QAAA,EAAKJ;IAAO;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAClBb,OAAA;MAAQQ,OAAO,EAAEA,CAAA,KAAIJ,UAAU,CAAEK,WAAW,IAAGA,WAAW,GAAC,CAAC,CAAE;MAAAF,QAAA,EAAC;IAAC;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAItE,CAAC;AAEV,CAAC;AAAAX,EAAA,CAjCKD,GAAG;AAAAa,EAAA,GAAHb,GAAG;AAkCT,eAAeA,GAAG;AAAC,IAAAa,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}